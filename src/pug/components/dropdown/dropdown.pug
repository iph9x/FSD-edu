mixin dropdown(props)
  - var wrapperClassName = props.id === 'guests' ? 'dropdown-wrapper field-wrapper field-wrapper-guests' : 'dropdown-wrapper field-wrapper field-wrapper-rooms'
  div(class=wrapperClassName)
    if props.title
      .field-wrapper__title= props.title
    .field-wrapper__arrow.js-dropdown-arrow expand_more
    input(type="text" placeholder=props.placeholderText class="dropdown js-dropdown field-wrapper__input" readonly)
    if (props.id === 'rooms')
      .dropdown__menu.js-dropdown__menu(data-menu-type = props.id)
        +dropdown-item({name: 'Спальни', count: 2, id: 'bedrooms'})
        +dropdown-item({name: 'Кровати', count: 2, id: 'bed'})
        +dropdown-item({name: 'Ванные комнаты', count: 2, id: 'bathrooms'})
    if (props.id === 'guests')
      .dropdown__menu.js-dropdown__menu(data-menu-type = props.id)
        +dropdown-item({name: 'Взрослые', count: 0, id: 'adults'})
        +dropdown-item({name: 'Дети', count: 0, id: 'children'})
        +dropdown-item({name: 'Младенцы', count: 0, id: 'babies'})
        .dropdown__buttons
          button(type="button").dropdown__clear.js-dropdown__clear.dropdown__clear_disabled Очистить
          button(type="button").dropdown__apply.js-dropdown__apply Применить

mixin dropdown-item(item)
  .dropdown__item.js-dropdown__item
    .dropdown__name= item.name
    .dropdown__counter.js-dropdown__counter
      button(type="button").dropdown__circle-btn.dropdown__circle-btn_reduce.js-dropdown__circle-btn_reduce -
      .dropdown__digit.js-dropdown__digit(data-menu-item-id=item.id)= item.count
      button(type="button").dropdown__circle-btn.dropdown__circle-btn_increase.js-dropdown__circle-btn_increase +
  